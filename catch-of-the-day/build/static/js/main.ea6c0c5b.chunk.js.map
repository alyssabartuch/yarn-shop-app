{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","id","visible","Object","keys","fishes","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","prev","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.ea6c0c5b.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n    static propTypes = {\n        history: PropTypes.object\n    }\n    \n    myInput = React.createRef();\n\n    /* TO AVOID EXPLICIT BINDING \n    - define property set to an arrow function allowing us to bind the value of this to the component\n    - properties are bound to the instance\n    - arrow functions have no implicit 'this' so no \n    need to explicitly bind to the component instance\n    */\n    goToStore = (event) => {\n        // 1. stop the form from submitting \n        event.preventDefault();\n        // 2. get the text from the input\n        const storeName = this.myInput.current.value;\n        // 3. change the page to '/store/input-text'\n        this.props.history.push(`/store/${storeName}`);\n    };\n\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input \n                    type=\"text\" \n                    ref={this.myInput}\n                    required \n                    placeholder=\"Store Name\" \n                    defaultValue={getFunName()} \n                />\n                <button type=\"submit\">Visit Store</button>\n            </form>\n        );\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// (React) stateless functional component \n// (ES6) arrow function with implicit return \nconst Header = (props) => (\n    <header className=\"top\">\n        <h1>Catch \n        <span className=\"ofThe\">\n            <span className=\"of\">of</span>\n            <span className=\"the\">the</span>\n        </span> \n        Day</h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n    \n    static propTypes = {\n        addFish: PropTypes.func\n    };\n\n    createFish = (event) => {\n        // stop form from submitting \n        event.preventDefault()\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        }\n        this.props.addFish(fish);\n        // refresh the form\n        event.currentTarget.reset();\n    };\n    \n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" /> \n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            name: PropTypes.string,\n            status: PropTypes.string, \n            desc: PropTypes.string,\n            image: PropTypes.string,\n            price: PropTypes.number\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func, \n        deleteFish: PropTypes.func\n    };\n    \n    handleChange = (event) => {  \n        const updatedFish = { \n            ...this.props.fish, \n            [event.currentTarget.name]: event.currentTarget.value  \n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    };\n    \n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    onChange={ this.handleChange} \n                    value={this.props.fish.name} \n                />\n                <input \n                    type=\"text\" \n                    name=\"price\" \n                    onChange={ this.handleChange} \n                    value={this.props.fish.price} \n                />\n                <select \n                    type=\"text\" \n                    name=\"status\" \n                    onChange={ this.handleChange} \n                    value={this.props.fish.status} \n                >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n\n                <textarea \n                    type=\"text\" \n                    name=\"desc\" \n                    onChange={ this.handleChange} \n                    value={this.props.fish.desc} \n                />\n                <input \n                    type=\"text\" \n                    name=\"image\" \n                    onChange={ this.handleChange} \n                    value={this.props.fish.image} \n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>\n            Login with GitHub\n        </button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Google')}>\n            Login with Google\n        </button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n            Login with Facebook\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCCkey_QM34Xuxft7bqsXBKB3EEE4Rb0jg\",\n    authDomain: \"catch-of-the-day-abartuch.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-abartuch.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// named export\nexport {firebaseApp};\n\n// default export\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object, \n        updateFish: PropTypes.func, \n        deleteFish: PropTypes.func, \n        addFish: PropTypes.func, \n        loadSampleFishes: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user});\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        // 1. look up the current store in the firebase DB\n        const store = await base.fetch(this.props.storeId, { context: this })\n        console.log(store);\n        \n        // 2. claim it if there is no owner\n\n        if (!store.owner) {\n            // save it as the new owner\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        // 3. set the state of the inventory component to reflect the current user\n        this.setState({ \n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n        console.log(authData);\n\n    }\n\n    authenticate = (provider) => {         \n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();                \n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n\n\n    logout = async () => {        \n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Logout</button>\n        // 1. check if user is logged in \n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />\n        }\n        \n        // 2. check if the user is NOT the store owner\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner of this store.</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        // 3. the user must be the store owner --> render inventory \n        return (\n            <div id=\"navbar\" className={this.props.visible ? 'slideIn' : 'slideOut'}>\n                <div className=\"inventory\">\n                    <h2>Inventory</h2> \n                    {logout}\n                    {Object.keys(this.props.fishes).map(key => (\n                            <EditFishForm \n                                key={key} \n                                index={key}\n                                fish={this.props.fishes[key]} \n                                updateFish={this.props.updateFish}\n                                deleteFish={this.props.deleteFish}\n                            />    \n                    ))}\n                    <AddFishForm addFish={this.props.addFish}/>\n                    <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nclass Order extends React.Component {\n    static propTypes = { \n        fishes: PropTypes.object, \n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    }\n    \n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: \"order\",\n            key, \n            timeout: { enter: 500, exit: 500 }\n        }\n        // making sure fish is loading before continuing \n        if (!fish) return null;\n\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\n                    </li>\n                </CSSTransition>\n            );\n            \n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>  \n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500 }}>\n                                <span>{count}</span> \n                            </CSSTransition> \n                        </TransitionGroup> \n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                    </span>  \n                </li>\n            </CSSTransition>\n        );\n    }\n    \n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n\n            if (isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            name: PropTypes.string,\n            status: PropTypes.string, \n            desc: PropTypes.string,\n            image: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    };\n\n    handleClick =() => {\n        this.props.addToOrder(this.props.index);\n    }\n    \n    render() {\n        const {image, name, price, desc, status} = this.props.details;\n        const isAvailable = status === 'available';\n\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name}></img>\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={this.handleClick} >{\n                    isAvailable ? 'Add To Order' : 'Sold Out!'}\n                </button>\n            </li> \n        );\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Inventory from './Inventory';\nimport Order from './Order';\nimport sampleFishes from '../sample-fishes'\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {},\n        visible: true\n    };\n\n    static propTypes = { \n        match: PropTypes.object\n    }\n\n    static transitionOptions = {\n        classNames: \"fish-edit\",\n        timeout: { enter: 500, exit: 500 }\n    }\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate localStorage\n        const localStorageRef = localStorage.getItem(params.storeId)\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) })\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);        \n    }\n\n    addFish = (fish) => {\n        // 1. take a copy of existing state \n        const fishes = {...this.state.fishes};\n        // 2. add new fish to fishes var\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. set the new fishes object to state\n        this.setState({ fishes });\n        // this.setState({\n        //     fishes: fishes\n        // });\n    } \n\n    updateFish = (key, updatedFish) => {\n        const fishes = {...this.state.fishes};\n        fishes[key] = updatedFish;\n        this.setState({ fishes })\n    }\n\n    deleteFish = (key) => {\n        // 1. take a copy of existing state\n        const fishes = {...this.state.fishes};\n        // 2. set fish to null to delete (firebase)\n        fishes[key] = null;\n        // 3. update state\n        this.setState({ fishes });\n\n    }\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    }\n    \n    addToOrder = (key) => {\n        // 1. take a copy of existing state\n        const order = {...this.state.order};\n        // 2. either add to order or update the order qty\n        order[key] = order[key] + 1 || 1;\n        // 3. call set state\n        this.setState({ order });\n    }\n\n    removeFromOrder = (key) => {\n        const order = {...this.state.order};\n        delete order[key];\n        this.setState({ order });\n    }\n\n    handleClick = () => {\n        this.setState(prev => ({ visible: !prev.visible }))\n    }\n\n    render() {        \n        return (\n            <>\n                <button type=\"button\" className=\"admin-panel-btn\" onClick={this.handleClick}>Admin Pannel</button>\n\n                <div className=\"catch-of-the-day\">\n                    <div className=\"menu\">\n                        <Header tagline=\"Fresh Seafood Market\"/>\n                        <ul className=\"fishes\">\n                            {Object.keys(this.state.fishes).map(key => (\n                                <Fish \n                                    key={key} \n                                    index={key}\n                                    details={this.state.fishes[key]} \n                                    addToOrder={this.addToOrder} \n                                />\n                            ))}\n                        </ul>\n                    </div>\n                    <Order \n                        fishes={this.state.fishes} \n                        order={this.state.order}\n                        removeFromOrder={this.removeFromOrder}\n                    />\n                    <Inventory \n                        visible={this.state.visible}\n                        addFish={this.addFish} \n                        updateFish={this.updateFish}\n                        deleteFish={this.deleteFish}\n                        loadSampleFishes={this.loadSampleFishes} \n                        fishes={this.state.fishes}\n                        storeId={this.props.match.params.storeId}\n                    />\n\n                    \n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found</h2>\n    </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound'\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker}/>\n            <Route exact path=\"/store/:storeId\" component={App}/>\n            <Route exact component={NotFound}/>\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}