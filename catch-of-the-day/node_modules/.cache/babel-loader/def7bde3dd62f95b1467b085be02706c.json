{"ast":null,"code":"import _regeneratorRuntime from \"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/src/components/Inventory.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddItemForm from './AddItemForm';\nimport EditItemForm from './EditItemForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uid: null,\n      owner: null\n    };\n\n    _this.authHandler = function _callee(authData) {\n      var store;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(base.fetch(_this.props.storeId, {\n                context: _assertThisInitialized(_this)\n              }));\n\n            case 2:\n              store = _context.sent;\n              console.log(store); // 2. claim it if there is no owner\n\n              if (store.owner) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                data: authData.user.uid\n              }));\n\n            case 7:\n              // 3. set the state of the inventory component to reflect the current user\n              _this.setState({\n                uid: authData.user.uid,\n                owner: store.owner || authData.user.uid\n              });\n\n              console.log(authData);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    _this.logout = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n            case 2:\n              _this.setState({\n                uid: null\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.authHandler({\n            user: user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var logout = React.createElement(\"button\", {\n        onClick: this.logout,\n        style: \"margin-bottom: 20pxl;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Logout\"); // 1. check if user is logged in \n\n      if (!this.state.uid) {\n        return React.createElement(Login, {\n          authenticate: this.authenticate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      } // 2. check if the user is NOT the store owner\n\n\n      if (this.state.uid !== this.state.owner) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Sorry you are not the owner of this store.\"), logout);\n      } // 3. the user must be the store owner --> render inventory \n\n\n      return React.createElement(\"div\", {\n        id: \"admin-panel-container\",\n        className: this.props.visible ? 'slideIn' : 'slideOut',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        id: \"admin-panel-btn\",\n        className: this.props.visible ? 'open' : 'closed',\n        onClick: this.props.openAdminPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Admin Pannel\"), React.createElement(\"div\", {\n        id: \"admin-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inventory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Inventory\"), logout, Object.keys(this.props.items).map(function (key) {\n        return React.createElement(EditItemForm, {\n          key: key,\n          index: key,\n          item: _this3.props.items[key],\n          updateItem: _this3.props.updateItem,\n          deleteItem: _this3.props.deleteItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n      }), React.createElement(AddItemForm, {\n        addItem: this.props.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.loadSampleItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Load Sample Items\"))));\n    }\n  }]);\n\n  return Inventory;\n}(React.Component);\n\nInventory.propTypes = {\n  visible: PropTypes.bool,\n  openAdminPanel: PropTypes.func,\n  items: PropTypes.object,\n  updateItem: PropTypes.func,\n  deleteItem: PropTypes.func,\n  addItem: PropTypes.func,\n  loadSampleItems: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/src/components/Inventory.js"],"names":["React","PropTypes","firebase","AddItemForm","EditItemForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","console","log","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","visible","openAdminPanel","Object","keys","items","map","key","updateItem","deleteItem","addItem","loadSampleItems","Component","propTypes","bool","func","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddItemForm from './AddItemForm';\nimport EditItemForm from './EditItemForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        visible: PropTypes.bool,\n        openAdminPanel: PropTypes.func,\n        items: PropTypes.object, \n        updateItem: PropTypes.func, \n        deleteItem: PropTypes.func, \n        addItem: PropTypes.func, \n        loadSampleItems: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({user});\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        // 1. look up the current store in the firebase DB\n        const store = await base.fetch(this.props.storeId, { context: this })\n        console.log(store);\n        \n        // 2. claim it if there is no owner\n\n        if (!store.owner) {\n            // save it as the new owner\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        // 3. set the state of the inventory component to reflect the current user\n        this.setState({ \n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n        console.log(authData);\n\n    }\n\n    authenticate = (provider) => {         \n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();                \n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n\n\n    logout = async () => {        \n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n    render() {\n        const logout = <button onClick={this.logout} style=\"margin-bottom: 20pxl;\">Logout</button>\n        // 1. check if user is logged in \n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />\n        }\n        \n        // 2. check if the user is NOT the store owner\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner of this store.</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        // 3. the user must be the store owner --> render inventory \n        return (\n            <div id=\"admin-panel-container\" className={this.props.visible ? 'slideIn' : 'slideOut'}>\n                <button type=\"button\" id=\"admin-panel-btn\" className={this.props.visible ? 'open' : 'closed'} onClick={this.props.openAdminPanel}>Admin Pannel</button>\n\n                <div id=\"admin-panel\">\n                    <div className=\"inventory\">\n                        <h2>Inventory</h2> \n                        {logout}\n                        {Object.keys(this.props.items).map(key => (\n                                <EditItemForm \n                                    key={key} \n                                    index={key}\n                                    item={this.props.items[key]} \n                                    updateItem={this.props.updateItem}\n                                    deleteItem={this.props.deleteItem}\n                                />    \n                        ))}\n                        <AddItemForm addItem={this.props.addItem}/>\n                        <button onClick={this.props.loadSampleItems}>Load Sample Items</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}