{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alyssabartuch/Development/yarn-shop/yarn-shop-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/alyssabartuch/Development/yarn-shop/yarn-shop-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alyssabartuch/Development/yarn-shop/yarn-shop-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/alyssabartuch/Development/yarn-shop/yarn-shop-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/alyssabartuch/Development/yarn-shop/yarn-shop-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/alyssabartuch/Development/yarn-shop/yarn-shop-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/alyssabartuch/Development/yarn-shop/yarn-shop-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import firebase from'firebase';import AddItemForm from'./AddItemForm';import EditItemForm from'./EditItemForm';import Login from'./Login';import base,{firebaseApp}from'../base';var Inventory=/*#__PURE__*/function(_React$Component){_inherits(Inventory,_React$Component);function Inventory(){var _getPrototypeOf2;var _this;_classCallCheck(this,Inventory);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={uid:null,owner:null};_this.authHandler=function _callee(authData){var store,today;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(base.fetch(_this.props.storeId,{context:_assertThisInitialized(_this)}));case 2:store=_context.sent;if(store.owner){_context.next=9;break;}today=new Date();// save it as the new owner\n_context.next=7;return _regeneratorRuntime.awrap(base.post(\"\".concat(_this.props.storeId,\"/owner\"),{data:authData.user.uid}));case 7:_context.next=9;return _regeneratorRuntime.awrap(base.post(\"\".concat(_this.props.storeId,\"/dateCreated\"),{data:today.toString()}));case 9:// 3. set the state of the inventory component to reflect the current user\n_this.setState({uid:authData.user.uid,owner:store.owner||authData.user.uid});// console.log(store);\ncase 10:case\"end\":return _context.stop();}}});};_this.authenticate=function(provider){var authProvider=new firebase.auth[\"\".concat(provider,\"AuthProvider\")]();firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);};_this.logout=function _callee2(){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(firebase.auth().signOut());case 2:_this.setState({uid:null});case 3:case\"end\":return _context2.stop();}}});};return _this;}_createClass(Inventory,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;firebase.auth().onAuthStateChanged(function(user){if(user){_this2.authHandler({user:user});}});}},{key:\"render\",value:function render(){var _this3=this;var logout=React.createElement(\"button\",{onClick:this.logout},\"Logout\");// 1. check if user is logged in \nif(!this.state.uid){return React.createElement(\"div\",{id:\"admin-panel-container\",className:this.props.visible?'slideIn':'slideOut'},React.createElement(\"button\",{type:\"button\",id:\"admin-panel-btn\",className:this.props.visible?'open':'closed',onClick:this.props.openAdminPanel},\"Admin Pannel\"),React.createElement(\"div\",{id:\"admin-panel\"},React.createElement(\"div\",{className:\"inventory\"},React.createElement(Login,{authenticate:this.authenticate}))));}// 2. check if the user is NOT the store owner\nif(this.state.uid!==this.state.owner){return React.createElement(\"div\",{id:\"admin-panel-container\",className:this.props.visible?'slideIn':'slideOut'},React.createElement(\"button\",{type:\"button\",id:\"admin-panel-btn\",className:this.props.visible?'open':'closed',onClick:this.props.openAdminPanel},\"Admin Pannel\"),React.createElement(\"div\",{id:\"admin-panel\"},React.createElement(\"div\",{className:\"inventory\"},React.createElement(\"h2\",null,\"Inventory Login\"),React.createElement(\"p\",null,\"Sorry you are not the owner of this store.\"),logout)));}// 3. the user must be the store owner --> render inventory \nreturn React.createElement(\"div\",{id:\"admin-panel-container\",className:this.props.visible?'slideIn':'slideOut'},React.createElement(\"button\",{type:\"button\",id:\"admin-panel-btn\",className:this.props.visible?'open':'closed',onClick:this.props.openAdminPanel},\"Admin Pannel\"),React.createElement(\"div\",{id:\"admin-panel\"},React.createElement(\"div\",{className:\"inventory\"},React.createElement(\"h2\",{id:\"inventory-header-title\"},\"Inventory\"),React.createElement(\"div\",{className:\"logout-btn\"},logout),Object.keys(this.props.items).map(function(key){return React.createElement(EditItemForm,{key:key,index:key,item:_this3.props.items[key],updateItem:_this3.props.updateItem,deleteItem:_this3.props.deleteItem});}),React.createElement(AddItemForm,{addItem:this.props.addItem}),React.createElement(\"button\",{onClick:this.props.loadSampleItems},\"Load Sample Items\"))));}}]);return Inventory;}(React.Component);export default Inventory;","map":{"version":3,"sources":["/Users/alyssabartuch/Development/yarn-shop/yarn-shop-app/src/components/Inventory.js"],"names":["React","firebase","AddItemForm","EditItemForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","today","Date","post","data","user","toString","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","visible","openAdminPanel","Object","keys","items","map","key","updateItem","deleteItem","addItem","loadSampleItems","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddItemForm from './AddItemForm';\nimport EditItemForm from './EditItemForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        visible: PropTypes.bool,\n        openAdminPanel: PropTypes.func,\n        items: PropTypes.object, \n        updateItem: PropTypes.func, \n        deleteItem: PropTypes.func, \n        addItem: PropTypes.func, \n        loadSampleItems: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({user});\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        // 1. look up the current store in the firebase DB\n        const store = await base.fetch(this.props.storeId, { context: this })\n        \n        // 2. claim it if there is no owner\n        if (!store.owner) {\n            let today = new Date();\n            // save it as the new owner\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n            await base.post(`${this.props.storeId}/dateCreated`, {\n                data: today.toString()\n            });\n        }\n        // 3. set the state of the inventory component to reflect the current user\n        this.setState({ \n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n        // console.log(store);\n        \n    }\n\n    authenticate = (provider) => {         \n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();                \n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n\n\n    logout = async () => {        \n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Logout</button>\n        // 1. check if user is logged in \n        if (!this.state.uid) {\n            return (\n                <div id=\"admin-panel-container\" className={this.props.visible ? 'slideIn' : 'slideOut'}>\n                    <button type=\"button\" id=\"admin-panel-btn\" className={this.props.visible ? 'open' : 'closed'} onClick={this.props.openAdminPanel}>Admin Pannel</button>\n\n                    <div id=\"admin-panel\">\n                        <div className=\"inventory\">\n                            <Login authenticate={this.authenticate} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        \n        // 2. check if the user is NOT the store owner\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div id=\"admin-panel-container\" className={this.props.visible ? 'slideIn' : 'slideOut'}>\n                    <button type=\"button\" id=\"admin-panel-btn\" className={this.props.visible ? 'open' : 'closed'} onClick={this.props.openAdminPanel}>Admin Pannel</button>\n\n                    <div id=\"admin-panel\">\n                        <div className=\"inventory\">\n                         <h2>Inventory Login</h2>\n                            <p>Sorry you are not the owner of this store.</p>\n                            {logout}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        // 3. the user must be the store owner --> render inventory \n        return (\n            <div id=\"admin-panel-container\" className={this.props.visible ? 'slideIn' : 'slideOut'}>\n                <button type=\"button\" id=\"admin-panel-btn\" className={this.props.visible ? 'open' : 'closed'} onClick={this.props.openAdminPanel}>Admin Pannel</button>\n\n                <div id=\"admin-panel\">\n                    <div className=\"inventory\">\n                        <h2 id=\"inventory-header-title\">Inventory</h2> \n                        <div className=\"logout-btn\">{logout}</div>\n                        {Object.keys(this.props.items).map(key => (\n                                <EditItemForm \n                                    key={key} \n                                    index={key}\n                                    item={this.props.items[key]} \n                                    updateItem={this.props.updateItem}\n                                    deleteItem={this.props.deleteItem}\n                                />    \n                        ))}\n                        <AddItemForm addItem={this.props.addItem}/>\n                        <button onClick={this.props.loadSampleItems}>Load Sample Items</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}