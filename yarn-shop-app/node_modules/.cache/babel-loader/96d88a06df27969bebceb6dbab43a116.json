{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import firebase from'firebase';import AddFishForm from'./AddFishForm';import EditFishForm from'./EditFishForm';import Login from'./Login';import base,{firebaseApp}from'../base';var Inventory=/*#__PURE__*/function(_React$Component){_inherits(Inventory,_React$Component);function Inventory(){var _getPrototypeOf2;var _this;_classCallCheck(this,Inventory);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={uid:null,owner:null};_this.authHandler=function _callee(authData){var store;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(base.fetch(_this.props.storeId,{context:_assertThisInitialized(_this)}));case 2:store=_context.sent;console.log(store);// 2. claim it if there is no owner\nif(store.owner){_context.next=7;break;}_context.next=7;return _regeneratorRuntime.awrap(base.post(\"\".concat(_this.props.storeId,\"/owner\"),{data:authData.user.uid}));case 7:// 3. set the state of the inventory component to reflect the current user\n_this.setState({uid:authData.user.uid,owner:store.owner||authData.user.uid});console.log(authData);case 9:case\"end\":return _context.stop();}}});};_this.authenticate=function(provider){var authProvider=new firebase.auth[\"\".concat(provider,\"AuthProvider\")]();firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);};_this.logout=function _callee2(){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(firebase.auth().signOut());case 2:_this.setState({uid:null});case 3:case\"end\":return _context2.stop();}}});};return _this;}_createClass(Inventory,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;firebase.auth().onAuthStateChanged(function(user){if(user){_this2.authHandler({user:user});}});}},{key:\"render\",value:function render(){var _this3=this;var logout=React.createElement(\"button\",{onClick:this.logout},\"Logout\");// 1. check if user is logged in \nif(!this.state.uid){return React.createElement(Login,{authenticate:this.authenticate});}// 2. check if the user is NOT the store owner\nif(this.state.uid!==this.state.owner){return React.createElement(\"div\",null,React.createElement(\"p\",null,\"Sorry you are not the owner of this store.\"),logout);}// 3. the user must be the store owner --> render inventory \nreturn React.createElement(\"div\",{id:\"navbar\",className:this.props.visible?'slideIn':'slideOut'},React.createElement(\"div\",{className:\"inventory\"},React.createElement(\"h2\",null,\"Inventory\"),logout,Object.keys(this.props.fishes).map(function(key){return React.createElement(EditFishForm,{key:key,index:key,fish:_this3.props.fishes[key],updateFish:_this3.props.updateFish,deleteFish:_this3.props.deleteFish});}),React.createElement(AddFishForm,{addFish:this.props.addFish}),React.createElement(\"button\",{onClick:this.props.loadSampleFishes},\"Load Sample Fishes\")));}}]);return Inventory;}(React.Component);export default Inventory;","map":{"version":3,"sources":["/Users/alyssabartuch/Development/yarn-shop/catch-of-the-day/src/components/Inventory.js"],"names":["React","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","console","log","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","visible","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object, \n        updateFish: PropTypes.func, \n        deleteFish: PropTypes.func, \n        addFish: PropTypes.func, \n        loadSampleFishes: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user});\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        // 1. look up the current store in the firebase DB\n        const store = await base.fetch(this.props.storeId, { context: this })\n        console.log(store);\n        \n        // 2. claim it if there is no owner\n\n        if (!store.owner) {\n            // save it as the new owner\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        // 3. set the state of the inventory component to reflect the current user\n        this.setState({ \n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n        console.log(authData);\n\n    }\n\n    authenticate = (provider) => {         \n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();                \n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n\n\n    logout = async () => {        \n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Logout</button>\n        // 1. check if user is logged in \n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />\n        }\n        \n        // 2. check if the user is NOT the store owner\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner of this store.</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        // 3. the user must be the store owner --> render inventory \n        return (\n            <div id=\"navbar\" className={this.props.visible ? 'slideIn' : 'slideOut'}>\n                <div className=\"inventory\">\n                    <h2>Inventory</h2> \n                    {logout}\n                    {Object.keys(this.props.fishes).map(key => (\n                            <EditFishForm \n                                key={key} \n                                index={key}\n                                fish={this.props.fishes[key]} \n                                updateFish={this.props.updateFish}\n                                deleteFish={this.props.deleteFish}\n                            />    \n                    ))}\n                    <AddFishForm addFish={this.props.addFish}/>\n                    <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}