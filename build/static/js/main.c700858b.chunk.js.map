{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddItemForm.js","components/EditItemForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-items.js","components/Item.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","id","src","alt","tagline","AddItemForm","nameRef","priceRef","statusRef","descRef","imageRef","createItem","item","name","price","parseFloat","status","desc","image","addItem","currentTarget","reset","EditItemForm","handleChange","updatedItem","updateItem","index","onChange","onClick","deleteItem","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","today","Date","post","data","user","toString","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","visible","openAdminPanel","Object","keys","items","map","key","loadSampleItems","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","total","reduce","prevTotal","item1","item2","item3","item4","item5","item6","item7","item8","item9","Item","handleClick","addToOrder","details","disabled","App","now","sampleItems","prev","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.c700858b.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n    static propTypes = {\n        history: PropTypes.object\n    }\n    \n    myInput = React.createRef();\n\n    /* TO AVOID EXPLICIT BINDING \n    - define property set to an arrow function allowing us to bind the value of this to the component\n    - properties are bound to the instance\n    - arrow functions have no implicit 'this' so no \n    need to explicitly bind to the component instance\n    */\n    goToStore = (event) => {\n        // 1. stop the form from submitting \n        event.preventDefault();\n        // 2. get the text from the input\n        const storeName = this.myInput.current.value;\n        // 3. change the page to '/store/input-text'\n        this.props.history.push(`/store/${storeName}`);\n    };\n\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input \n                    type=\"text\" \n                    ref={this.myInput}\n                    required \n                    placeholder=\"Store Name\" \n                    defaultValue={getFunName()} \n                />\n                <button type=\"submit\">Visit Store</button>\n            </form>\n        );\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// (React) stateless functional component \n// (ES6) arrow function with implicit return \nconst Header = (props) => (\n    <header className=\"store\">\n        <h1 id=\"yarn\">Yarn</h1>\n        <img src=\"../images/yarn-logo.png\" alt=\"yarn-logo\" id=\"yarn-logo\"/>\n        <h1 id=\"shop\">Shop</h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddItemForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n    \n    static propTypes = {\n        addItem: PropTypes.func\n    };\n\n    createItem = (event) => {\n        // stop form from submitting \n        event.preventDefault()\n        const item = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        }\n        this.props.addItem(item);\n        // refresh the form\n        event.currentTarget.reset();\n    };\n    \n    render() {\n        return (\n            <form className=\"item-edit\" onSubmit={this.createItem}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" /> \n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Item</button>\n            </form>\n        );\n    }\n}\n\nexport default AddItemForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditItemForm extends React.Component {\n    static propTypes = {\n        item: PropTypes.shape({\n            name: PropTypes.string,\n            status: PropTypes.string, \n            desc: PropTypes.string,\n            image: PropTypes.string,\n            price: PropTypes.number\n        }),\n        index: PropTypes.string,\n        updateItem: PropTypes.func, \n        deleteItem: PropTypes.func\n    };\n    \n    handleChange = (event) => {  \n        const updatedItem = { \n            ...this.props.item, \n            [event.currentTarget.name]: event.currentTarget.value  \n        };\n        this.props.updateItem(this.props.index, updatedItem);\n    };\n    \n    render() {\n        return (\n            <div className=\"item-edit\">\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    onChange={ this.handleChange} \n                    value={this.props.item.name} \n                />\n                <input \n                    type=\"text\" \n                    name=\"price\" \n                    onChange={ this.handleChange} \n                    value={this.props.item.price} \n                />\n                <select \n                    type=\"text\" \n                    name=\"status\" \n                    onChange={ this.handleChange} \n                    value={this.props.item.status} \n                >\n                    <option value=\"available\">Availavle!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n\n                <textarea \n                    type=\"text\" \n                    name=\"desc\" \n                    onChange={ this.handleChange} \n                    value={this.props.item.desc} \n                />\n                <input \n                    type=\"text\" \n                    name=\"image\" \n                    onChange={ this.handleChange} \n                    value={this.props.item.image} \n                />\n                <button onClick={() => this.props.deleteItem(this.props.index)}>Remove Item</button>\n            </div>\n        );\n    }\n}\n\nexport default EditItemForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>\n            Login with GitHub\n        </button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Google')}>\n            Login with Google\n        </button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n            Login with Facebook\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBGhtC4H21i1cIWmntRp4KFJfX2u-g5CdU\",\n    authDomain: \"yarn-shop-app.firebaseapp.com\",\n    databaseURL: \"https://yarn-shop-app.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// named export\nexport {firebaseApp};\n\n// default export\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddItemForm from './AddItemForm';\nimport EditItemForm from './EditItemForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        visible: PropTypes.bool,\n        openAdminPanel: PropTypes.func,\n        items: PropTypes.object, \n        updateItem: PropTypes.func, \n        deleteItem: PropTypes.func, \n        addItem: PropTypes.func, \n        loadSampleItems: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({user});\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        // 1. look up the current store in the firebase DB\n        const store = await base.fetch(this.props.storeId, { context: this })\n        \n        // 2. claim it if there is no owner\n        if (!store.owner) {\n            let today = new Date();\n            // save it as the new owner\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n            await base.post(`${this.props.storeId}/dateCreated`, {\n                data: today.toString()\n            });\n        }\n        // 3. set the state of the inventory component to reflect the current user\n        this.setState({ \n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n        // console.log(store);\n        \n    }\n\n    authenticate = (provider) => {         \n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();                \n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n\n\n    logout = async () => {        \n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Logout</button>\n        // 1. check if user is logged in \n        if (!this.state.uid) {\n            return (\n                <div id=\"admin-panel-container\" className={this.props.visible ? 'slideIn' : 'slideOut'}>\n                    <button type=\"button\" id=\"admin-panel-btn\" className={this.props.visible ? 'open' : 'closed'} onClick={this.props.openAdminPanel}>Admin Pannel</button>\n\n                    <div id=\"admin-panel\">\n                        <div className=\"inventory\">\n                            <Login authenticate={this.authenticate} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        \n        // 2. check if the user is NOT the store owner\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div id=\"admin-panel-container\" className={this.props.visible ? 'slideIn' : 'slideOut'}>\n                    <button type=\"button\" id=\"admin-panel-btn\" className={this.props.visible ? 'open' : 'closed'} onClick={this.props.openAdminPanel}>Admin Pannel</button>\n\n                    <div id=\"admin-panel\">\n                        <div className=\"inventory\">\n                         <h2>Inventory Login</h2>\n                            <p>Sorry you are not the owner of this store.</p>\n                            {logout}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        // 3. the user must be the store owner --> render inventory \n        return (\n            <div id=\"admin-panel-container\" className={this.props.visible ? 'slideIn' : 'slideOut'}>\n                <button type=\"button\" id=\"admin-panel-btn\" className={this.props.visible ? 'open' : 'closed'} onClick={this.props.openAdminPanel}>Admin Pannel</button>\n\n                <div id=\"admin-panel\">\n                    <div className=\"inventory\">\n                        <h2 id=\"inventory-header-title\">Inventory</h2> \n                        <div className=\"logout-btn\">{logout}</div>\n                        {Object.keys(this.props.items).map(key => (\n                                <EditItemForm \n                                    key={key} \n                                    index={key}\n                                    item={this.props.items[key]} \n                                    updateItem={this.props.updateItem}\n                                    deleteItem={this.props.deleteItem}\n                                />    \n                        ))}\n                        <AddItemForm addItem={this.props.addItem}/>\n                        <button onClick={this.props.loadSampleItems}>Load Sample Items</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nclass Order extends React.Component {\n    static propTypes = { \n        items: PropTypes.object, \n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    }\n    \n    renderOrder = (key) => {\n        const item = this.props.items[key];\n        const count = this.props.order[key];\n        const isAvailable = item && item.status === 'available';\n        const transitionOptions = {\n            classNames: \"order\",\n            key, \n            timeout: { enter: 500, exit: 500 }\n        }\n        // making sure item is loading before continuing \n        if (!item) return null;\n\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {item ? item.name : 'item'} is no longer available\n                    </li>\n                </CSSTransition>\n            );\n            \n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>  \n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500 }}>\n                                <span>{count}</span> \n                            </CSSTransition> \n                        </TransitionGroup> \n                         {item.name} {formatPrice(count * item.price)}\n                        <button id=\"remove-order-item-btn\" onClick={() => this.props.removeFromOrder(key) }>&times;</button>\n                    </span>  \n                </li>\n            </CSSTransition>\n        );\n    }\n    \n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const item = this.props.items[key];\n            const count = this.props.order[key];\n            const isAvailable = item && item.status === 'available';\n\n            if (isAvailable) {\n                return prevTotal + (count * item.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2 id=\"order-header-title\">Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;","// This is just some sample data so you don't have to think of your own!\nconst items = {\n  item1: {\n    name: \"Blue Green Yarn\",\n    image: \"/images/blue-green-yarn.jpg\",\n    desc:\n      \"Reward the chosen human with a slow blink run outside as soon as door open. Sit on the laptop this cat happen now, it was too purr-fect!!!, rub my belly hiss. Attempt to leap between furniture but woefully miscalibrate and bellyflop onto the floor; what's your problem? i meant to do that now i shall wash myself intently attack the dog then pretend like nothing happened or thug cat or purr so i'm going to lap some water out of my master's cup meow.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  item2: {\n    name: \"Brown Yarn\",\n    image: \"/images/brown-yarn.jpg\",\n    desc:\n      \"While happily ignoring when being called love blinks and purr purr purr purr yawn cats making all the muffins but rub face on owner. Slap kitten brother with paw catty ipsum go into a room to decide you didn't want to be in there anyway. Destroy the blinds. Eat prawns daintily with a claw then lick paws clean wash down prawns with a lap of carnation milk then retire to the warmest spot on the couch to claw at the fabric before taking a catnap eat the fat cats food yet stares at human while pushing stuff off a table but scratch leg; meow for can opener to feed me and howl on top of tall thing but purr but ask for petting.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  item3: {\n    name: \"Green Yarn\",\n    image: \"/images/green-yarn.jpg\",\n    desc:\n      \"Spend all night ensuring people don't sleep sleep all day purr like an angel and have my breakfast spaghetti yarn. Sit in window and stare oooh, a bird, yum dream about hunting birds so prance along on top of the garden fence, annoy the neighbor's dog and make it bark. Pet my belly, you know you want to; seize the hand and shred it! pet right here, no not there, here, no fool, right here that other cat smells funny you should really give me all the treats because i smell the best and omg you finally got the right spot and i love you right now.\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  item4: {\n    name: \"Lilac Yarn\",\n    image: \"/images/lilac-yarn.jpg\",\n    desc:\n      \"Groom forever, stretch tongue and leave it slightly out, blep experiences short bursts of poo-phoria after going to the loo. Hide head under blanket so no one can see bird bird bird bird bird bird human why take bird out i could have eaten that rub face on owner or chew master's slippers and terrorize the hundred-and-twenty-pound rottweiler and steal his bed, not sorry pet me pet me pet me pet me, bite, scratch, why are you petting me. Brown cats with pink ears. Sleeps on my head love you, then bite you so where is my slave?\",\n    price: 1129,\n    status: \"available\"\n  },\n\n  item5: {\n    name: \"Purple Red Yarn\",\n    image: \"/images/purple-red-yarn.jpg\",\n    desc:\n      \"I'm getting hungry. Sit on human they not getting up ever making bread on the bathrobe flee in terror at cucumber discovered on floor for good morning sunshine but kitty power, eat from dog's food. Why use post when this sofa is here litter box is life hunt by meowing loudly at 5am next to human slave food dispenser lick left leg for ninety minutes, still dirty this is the day i'm bored inside, let me out i'm lonely outside, let me in i can't make up my mind whether to go in or out, guess i'll just stand partway in and partway out, contemplating the universe for half an hour how dare you nudge me with your foot?!?! leap into the air in greatest offense!.\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  item6: {\n    name: \"Purple Yarn\",\n    image: \"/images/purple-yarn.jpg\",\n    desc:\n      \"Poop in litter box, scratch the walls. Knock dish off table head butt cant eat out of my own dish paw your face to wake you up in the morning weigh eight pounds but take up a full-size bed, for crusty butthole for find something else more interesting, but destroy the blinds demand to be let outside at once, and expect owner to wait for me as i think about it. Stare at the wall, play with food and get confused by dust kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff. Pet me pet me pet me pet me, bite, scratch, why are you petting me where is my slave?\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  item7: {\n    name: \"Rainbow Yarn\",\n    image: \"/images/rainbow-yarn.jpg\",\n    desc: \"I'm getting hungry so stare at owner accusingly then wink. There's a forty year old lady there let us feast. Destroy couch as revenge nya nya nyan show belly. I will be pet i will be pet and then i will hiss this is the day . Run as fast as i can into another room for no reason. Mesmerizing birds roll over and sun my belly shove bum in owner's face like camera lens and sit in box and chew foot i cry and cry and cry unless you pet me, and then maybe i cry just for fun.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  item8: {\n    name: \"Red Yarn\",\n    image: \"/images/red-yarn.jpg\",\n    desc:\n      \"Open the door, let me out, let me out, let me-out, let me-aow, let meaow, meaow! x but i vomit in the bed in the middle of the night yet poop in the plant pot. Cough furball into food bowl then scratch owner for a new one nyan fluffness ahh cucumber!. Experiences short bursts of poo-phoria after going to the loo thug cat but freak human out make funny noise mow mow mow mow mow mow success now attack human.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  item9: {\n    name: \"Teal Yarn\",\n    image: \"/images/teal-yarn.jpg\",\n    desc:\n      \"Sun bathe poop in the plant pot but missing until dinner time. I love cuddles cereal boxes make for five star accommodation leave fur on owners clothes, for cat sit like bread. Instead of drinking water from the cat bowl, make sure to steal water from the toilet refuse to come home when humans are going to bed; stay out all night then yowl like i am dying at 4am and sit and stare so i like fish.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default items;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Item extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            name: PropTypes.string,\n            status: PropTypes.string, \n            desc: PropTypes.string,\n            image: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    };\n\n    handleClick =() => {\n        this.props.addToOrder(this.props.index);\n    }\n    \n    render() {\n        const {image, name, price, desc, status} = this.props.details;\n        const isAvailable = status === 'available';\n\n        return (\n            <li className=\"store-item\">\n                    <div className=\"item-header\">\n                        <div className=\"item-name\">{name}</div>\n                        <div className=\"price\"><span>{formatPrice(price)}</span></div>\n                    </div>\n                    <div className=\"item-info\">\n                        <div className=\"item-desc\">\n                            <p>{desc}</p>\n                            <button className=\"add-to-order-btn\" disabled={!isAvailable} onClick={this.handleClick} >{\n                            isAvailable ? 'Add To Order' : 'Sold Out!'}\n                            </button>\n                        </div>   \n                        <div className=\"img-container\">\n                            <img className=\"item-photo\" src={image} alt={name}></img>\n                        </div>\n                    </div>\n                    \n            </li> \n        );\n    }\n}\n\nexport default Item;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Inventory from './Inventory';\nimport Order from './Order';\nimport sampleItems from '../sample-items'\nimport Item from './Item';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        items: {},\n        order: {},\n        visible: false\n    };\n\n    static propTypes = { \n        match: PropTypes.object\n    }\n\n    static transitionOptions = {\n        classNames: \"item-edit\",\n        timeout: { enter: 500, exit: 500 }\n    }\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        \n        // first reinstate localStorage\n        const localStorageRef = localStorage.getItem(params.storeId)\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) })\n        }\n        this.ref = base.syncState(`${params.storeId}/items`, {\n            context: this,\n            state: 'items'\n        });\n        \n    }\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);        \n    }\n\n    addItem = (item) => {\n        const items = {...this.state.items};\n        items[`item${Date.now()}`] = item;\n        this.setState({ items });\n    } \n\n    updateItem = (key, updatedItem) => {\n        const items = {...this.state.items};\n        items[key] = updatedItem;\n        this.setState({ items })\n    }\n\n    deleteItem = (key) => {\n        const items = {...this.state.items};\n        items[key] = null;\n        this.setState({ items });\n\n    }\n\n    loadSampleItems = () => {\n        this.setState({ items: sampleItems });\n    }\n    \n    addToOrder = (key) => {\n        const order = {...this.state.order};\n        order[key] = order[key] + 1 || 1;\n        this.setState({ order });\n    }\n\n    removeFromOrder = (key) => {\n        const order = {...this.state.order};\n        delete order[key];\n        this.setState({ order });\n    }\n\n    openAdminPanel = () => {\n        this.setState(prev => ({ visible: !prev.visible }))\n    }\n\n    render() {        \n        return (\n            <>\n                <div className=\"yarn-shop\">\n                    <div className=\"menu\">\n                        <Header tagline=\"- - - Love in Every Twist - - -\"/>\n                        <ul className=\"items\">\n                            {Object.keys(this.state.items).map(key => (\n                                <Item \n                                    key={key} \n                                    index={key}\n                                    details={this.state.items[key]} \n                                    addToOrder={this.addToOrder} \n                                />\n                            ))}\n                        </ul>\n                    </div>\n                    <Order \n                        items={this.state.items} \n                        order={this.state.order}\n                        removeFromOrder={this.removeFromOrder}\n                    />\n                    <Inventory \n                        visible={this.state.visible}\n                        openAdminPanel={this.openAdminPanel}\n                        addItem={this.addItem} \n                        updateItem={this.updateItem}\n                        deleteItem={this.deleteItem}\n                        loadSampleItems={this.loadSampleItems} \n                        items={this.state.items}\n                        storeId={this.props.match.params.storeId}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found</h2>\n    </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound'\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker}/>\n            <Route exact path=\"/store/:storeId\" component={App}/>\n            <Route exact component={NotFound}/>\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}